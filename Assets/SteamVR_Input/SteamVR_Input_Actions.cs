//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Boolean p_default_TriggerClick;
        
        private static SteamVR_Action_Boolean p_default_TriggerHold;
        
        private static SteamVR_Action_Boolean p_default_SystemClick;
        
        private static SteamVR_Action_Boolean p_default_JoystickTouch;
        
        private static SteamVR_Action_Vector2 p_default_JoystickPose;
        
        private static SteamVR_Action_Boolean p_default_JoystickClick;
        
        private static SteamVR_Action_Vector2 p_default_TrackpadPose;
        
        private static SteamVR_Action_Boolean p_default_TrackpadTouch;
        
        private static SteamVR_Action_Boolean p_default_SqueezeGrip;
        
        private static SteamVR_Action_Boolean p_default_ButtonA;
        
        private static SteamVR_Action_Boolean p_default_ButtonB;
        
        private static SteamVR_Action_Boolean p_default_Pinch;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TriggerClick
        {
            get
            {
                return SteamVR_Actions.p_default_TriggerClick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TriggerHold
        {
            get
            {
                return SteamVR_Actions.p_default_TriggerHold.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SystemClick
        {
            get
            {
                return SteamVR_Actions.p_default_SystemClick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_JoystickTouch
        {
            get
            {
                return SteamVR_Actions.p_default_JoystickTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_JoystickPose
        {
            get
            {
                return SteamVR_Actions.p_default_JoystickPose.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_JoystickClick
        {
            get
            {
                return SteamVR_Actions.p_default_JoystickClick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_TrackpadPose
        {
            get
            {
                return SteamVR_Actions.p_default_TrackpadPose.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TrackpadTouch
        {
            get
            {
                return SteamVR_Actions.p_default_TrackpadTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SqueezeGrip
        {
            get
            {
                return SteamVR_Actions.p_default_SqueezeGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_ButtonA
        {
            get
            {
                return SteamVR_Actions.p_default_ButtonA.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_ButtonB
        {
            get
            {
                return SteamVR_Actions.p_default_ButtonB.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Pinch
        {
            get
            {
                return SteamVR_Actions.p_default_Pinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_TriggerClick,
                    SteamVR_Actions.default_TriggerHold,
                    SteamVR_Actions.default_SystemClick,
                    SteamVR_Actions.default_JoystickTouch,
                    SteamVR_Actions.default_JoystickPose,
                    SteamVR_Actions.default_JoystickClick,
                    SteamVR_Actions.default_TrackpadPose,
                    SteamVR_Actions.default_TrackpadTouch,
                    SteamVR_Actions.default_SqueezeGrip,
                    SteamVR_Actions.default_ButtonA,
                    SteamVR_Actions.default_ButtonB,
                    SteamVR_Actions.default_Pinch,
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_TriggerClick,
                    SteamVR_Actions.default_TriggerHold,
                    SteamVR_Actions.default_SystemClick,
                    SteamVR_Actions.default_JoystickTouch,
                    SteamVR_Actions.default_JoystickPose,
                    SteamVR_Actions.default_JoystickClick,
                    SteamVR_Actions.default_TrackpadPose,
                    SteamVR_Actions.default_TrackpadTouch,
                    SteamVR_Actions.default_SqueezeGrip,
                    SteamVR_Actions.default_ButtonA,
                    SteamVR_Actions.default_ButtonB,
                    SteamVR_Actions.default_Pinch};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_TriggerClick,
                    SteamVR_Actions.default_TriggerHold,
                    SteamVR_Actions.default_SystemClick,
                    SteamVR_Actions.default_JoystickTouch,
                    SteamVR_Actions.default_JoystickClick,
                    SteamVR_Actions.default_TrackpadTouch,
                    SteamVR_Actions.default_SqueezeGrip,
                    SteamVR_Actions.default_ButtonA,
                    SteamVR_Actions.default_ButtonB,
                    SteamVR_Actions.default_Pinch};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[0];
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.default_JoystickPose,
                    SteamVR_Actions.default_TrackpadPose};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_TriggerClick,
                    SteamVR_Actions.default_TriggerHold,
                    SteamVR_Actions.default_SystemClick,
                    SteamVR_Actions.default_JoystickTouch,
                    SteamVR_Actions.default_JoystickPose,
                    SteamVR_Actions.default_JoystickClick,
                    SteamVR_Actions.default_TrackpadPose,
                    SteamVR_Actions.default_TrackpadTouch,
                    SteamVR_Actions.default_SqueezeGrip,
                    SteamVR_Actions.default_ButtonA,
                    SteamVR_Actions.default_ButtonB,
                    SteamVR_Actions.default_Pinch};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_TriggerClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/TriggerClick")));
            SteamVR_Actions.p_default_TriggerHold = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/TriggerHold")));
            SteamVR_Actions.p_default_SystemClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SystemClick")));
            SteamVR_Actions.p_default_JoystickTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/JoystickTouch")));
            SteamVR_Actions.p_default_JoystickPose = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/JoystickPose")));
            SteamVR_Actions.p_default_JoystickClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/JoystickClick")));
            SteamVR_Actions.p_default_TrackpadPose = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/TrackpadPose")));
            SteamVR_Actions.p_default_TrackpadTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/TrackpadTouch")));
            SteamVR_Actions.p_default_SqueezeGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SqueezeGrip")));
            SteamVR_Actions.p_default_ButtonA = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/ButtonA")));
            SteamVR_Actions.p_default_ButtonB = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/ButtonB")));
            SteamVR_Actions.p_default_Pinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Pinch")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
        }
    }
}
